version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: data-visualization-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: data_visualization
      MYSQL_USER: appuser
      MYSQL_PASSWORD: app123456
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: data-visualization-redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  # 应用服务
  app:
    build: .
    container_name: data-visualization-app
    environment:
      - APP_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=appuser
      - DB_PASSWORD=app123456
      - DB_NAME=data_visualization
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "9033:9033"
    depends_on:
      - mysql
      - redis
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    networks:
      - app-network
    restart: unless-stopped

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: data-visualization-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:
  uploads_data:
  logs_data:

networks:
  app-network:
    driver: bridge